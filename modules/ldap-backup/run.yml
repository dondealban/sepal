---
- file: path="/data/ldap-backup" state=directory
- file: path="/data/ldap-backup/module_initialized" state=absent

- name: "ldap-backup | Start container"
  docker_container:
    api_version: "{{ api_version }}"
    name: "{{ name }}"
    pull: "{{ pull }}"
    image: "{{ image }}"
    state: "{{ state }}"
    restart_policy: "{{ restart_policy }}"
    network_mode: "{{ network_mode }}"
    log_driver: syslog
    log_opt:
      syslog-address: "{{ syslog_address }}"
      tag: "ldap-backup"
    networks:
      - name: 'sepal'
    volumes:
    - "/data/ldap/database:/var/lib/ldap"
    - "/data/ldap/config:/etc/ldap/slapd.d"
    - "/data/ldap-backup:/module"
    - "/backup/ldap:/data/backup"
    env:
      LDAP_BACKUP_DATA_CRON_EXP: '0 0 * * *'
      LDAP_BACKUP_CONFIG_CRON_EXP: '0 0 * * *'
      LDAP_BACKUP_TTL: '365'
      RESTORE_BACKUP: "{{ restore_backup }}"
  register: container


# Check is container is started/restarted by checking if container start time changed after executing the
# docker_container task.  Cannot use the container.changed, since it always return true when image is pulled
# https://github.com/ansible/ansible/issues/19549
- name: "Checking start time of {{ container_name | default(module) }}"
  script: "start_time.sh {{ container_name | default(module) }}"
  register: new_start_time

- set_fact:
   new_start_time: "{{ new_start_time.stdout | regex_replace('[\\r\\n]+', '') }}"

- name: "ldap-backup | Wait until initialized"
  wait_for: path=/data/ldap-backup/module_initialized
  when: new_start_time != start_timestamp
